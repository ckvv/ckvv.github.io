<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vues on CK's Blog</title><link>https://chenkai.life/vue/</link><description>Recent content in Vues on CK's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 27 Dec 2021 16:27:16 +0800</lastBuildDate><atom:link href="https://chenkai.life/vue/index.xml" rel="self" type="application/rss+xml"/><item><title>Vue组件的自动按需引入</title><link>https://chenkai.life/vue/vue-component-registration/</link><pubDate>Mon, 27 Dec 2021 16:27:16 +0800</pubDate><guid>https://chenkai.life/vue/vue-component-registration/</guid><description>在Vue中我们可以通过全局组件、局部注册的方式来使用组件
全局注册 通过app.component来创建全局组件
import { createApp } from &amp;#39;vue&amp;#39; import HelloWorld from &amp;#39;./components/HelloWorld&amp;#39; const app = createApp({}) // 全局注册一个名为hello-wolrd的组件 app.component(&amp;#39;hello-wolrd&amp;#39;, HelloWorld); 一旦我们全局注册了组件，我们就可以在任何地方使用这个组件：&amp;lt;hello-wolrd/&amp;gt;
值得注意的是全局注册会使Vue失去TypeScript的支持, Vue 3 有一个 PR 扩展了全局组件的接口。目前，Volar 已经支持这种用法，我们可以通过在根目录添加components.d.ts文件的方式来添加全对局组件的TypeScript的支持
declare module &amp;#39;vue&amp;#39; { export interface GlobalComponents { HelloWorld: typeof import(&amp;#39;./src/components/HelloWorld.vue&amp;#39;)[&amp;#39;default&amp;#39;] } } 局部注册 我们可以直接从文件中引入vue组件使用，
在单文件组件中（SFC）
&amp;lt;template&amp;gt; &amp;lt;HelloWorld msg=&amp;#34;Welcome to Your Vue.js App&amp;#34;/&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script&amp;gt; import HelloWorld from &amp;#39;./components/HelloWorld.vue&amp;#39; export default { name: &amp;#39;App&amp;#39;, components: { HelloWorld } } &amp;lt;/script&amp;gt; 在JSX中</description></item></channel></rss>