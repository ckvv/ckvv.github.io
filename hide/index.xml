<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hides on CK's Blog</title><link>https://chenkai.life/hide/</link><description>Recent content in Hides on CK's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 09 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://chenkai.life/hide/index.xml" rel="self" type="application/rss+xml"/><item><title>Web面试问题</title><link>https://chenkai.life/hide/web-mian-shi-qs2/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://chenkai.life/hide/web-mian-shi-qs2/</guid><description>&lt;h2 id="前端工作面试问题">
前端工作面试问题
&lt;a class="heading-link" href="#%e5%89%8d%e7%ab%af%e5%b7%a5%e4%bd%9c%e9%9d%a2%e8%af%95%e9%97%ae%e9%a2%98">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;/a>
&lt;/h2>
&lt;p>本文包含了一些用于考查候选者的前端面试问题。不建议对单个候选者问及每个问题 (那需要好几个小时)。只要从列表里挑选一些，就能帮助你考查候选者是否具备所需要的技能。&lt;/p>
&lt;p>&lt;strong>备注：&lt;/strong> 这些问题中很多都是开放性的，可以引发有趣的讨论。这比直接的答案更能体现此人的能力。&lt;/p>
&lt;h2 id="a-nametoc目录a">
&lt;a name='toc'>目录&lt;/a>
&lt;a class="heading-link" href="#a-nametoc%e7%9b%ae%e5%bd%95a">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="#general-questions">常见问题&lt;/a>&lt;/li>
&lt;li>&lt;a href="#html-questions">HTML 相关问题&lt;/a>&lt;/li>
&lt;li>&lt;a href="#css-questions">CSS 相关问题&lt;/a>&lt;/li>
&lt;li>&lt;a href="#js-questions">JS 相关问题&lt;/a>&lt;/li>
&lt;li>&lt;a href="#testing-questions">测试相关问题&lt;/a>&lt;/li>
&lt;li>&lt;a href="#performance-questions">效能相关问题&lt;/a>&lt;/li>
&lt;li>&lt;a href="#network-questions">网络相关问题&lt;/a>&lt;/li>
&lt;li>&lt;a href="#coding-questions">代码相关问题&lt;/a>&lt;/li>
&lt;li>&lt;a href="#fun-questions">趣味问题&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>前端开发面试题</title><link>https://chenkai.life/hide/web-mian-shi-qs1/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://chenkai.life/hide/web-mian-shi-qs1/</guid><description>前端开发面试题 （题目列表页） 目录 前言 HTML部分 CSS部分 JavaScript部分 其他问题 前端学习网站推荐 前言 前言
HTML Doctype作用？严格模式与混杂模式如何区分？它们有何意义?
HTML5 为什么只需要写 ？
行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？
页面导入样式时，使用link和@import有什么区别？
介绍一下你对浏览器内核的理解？
常见的浏览器内核有哪些？
html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？
简述一下你对HTML语义化的理解？
HTML5的离线储存怎么使用，工作原理能不能解释一下？
浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？
请描述一下 cookies，sessionStorage 和 localStorage 的区别？
iframe有那些缺点？</description></item><item><title>前端开发面试题及答案</title><link>https://chenkai.life/hide/web-min-shi-qsan/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://chenkai.life/hide/web-min-shi-qsan/</guid><description>前端开发面试题
前言 只看问题点这里
看全部问题和答案点这里
本文由我收集总结了一些前端面试题，初学者阅后也要用心钻研其中的原理，重要知识需要系统学习、透彻学习，形成自己的知识链。万不可投机取巧，临时抱佛脚只求面试侥幸混过关是错误的！也是不可能的！不可能的！不可能的！
前端还是一个年轻的行业，新的行业标准， 框架， 库都不断在更新和新增，正如赫门在2015深JS大会上的《前端服务化之路》主题演讲中说的一句话：“每18至24个月，前端都会难一倍”，这些变化使前端的能力更加丰富、创造的应用也会更加完美。所以关注各种前端技术，跟上快速变化的节奏，也是身为一个前端程序员必备的技能之一。
最近也收到许多微博私信的鼓励和更正题目信息，后面会经常更新题目和答案到github博客。希望前端er达到既能使用也会表达，对理论知识有自己的理解。可根据下面的知识点一个一个去进阶学习，形成自己的职业技能链。
面试有几点需注意：(来源寒冬winter 老师，github:@wintercn)
面试题目： 根据你的等级和职位的变化，入门级到专家级，广度和深度都会有所增加。
题目类型： 理论知识、算法、项目细节、技术视野、开放性题、工作案例。
细节追问： 可以确保问到你开始不懂或面试官开始不懂为止，这样可以大大延展题目的区分度和深度，知道你的实际能力。因为这种知识关联是长时期的学习，临时抱佛脚绝对是记不住的。
回答问题再棒，面试官（可能是你面试职位的直接领导），会考虑我要不要这个人做我的同事？所以态度很重要、除了能做事，还要会做人。（感觉更像是相亲( •̣̣̣̣̣̥́௰•̣̣̣̣̣̥̀ )）
资深的前端开发能把absolute和relative弄混，这样的人不要也罢，因为团队需要的是：你这个人具有可以依靠的才能（靠谱）。
前端开发所需掌握知识点概要：
HTML&amp;amp;CSS： 对Web标准的理解（结构、表现、行为）、浏览器内核、渲染原理、依赖管理、兼容性、CSS语法、层次关系，常用属性、布局、选择器、权重、盒模型、 Hack、CSS预处理器、CSS3、Flexbox、CSS Modules、Document flow、BFC、HTML5（离线 &amp;amp; 存储、Histoy,多媒体、WebGL\SVG\Canvas）； JavaScript： 数据类型、运算、对象、Function、继承、闭包、作用域、事件、Prototype、RegExp、JSON、Ajax、DOM、BOM、 内存泄漏、跨域、异步请求、模板引擎、模块化、Flux、同构、算法、ECMAScript6、Nodejs、HTTP、 其他： 主流MVVM框架(React\Vue\Angular)、Hybrid App\React Native\Weex、TypeScript、RESTFul、WEB安全、前端工程化、依赖管理、性能优化、 重构、团队协作、可维护、易用性、SEO、UED、前端技术选型、快速学习能力等； 作为一名前端工程师，无论工作年头长短都应该掌握的知识点：
此条由 王子墨 发表在 攻城师的实验室
1、DOM结构 —— 两个节点之间可能存在哪些关系以及如何在节点之间任意移动。 2、DOM操作 —— 如何添加、移除、移动、复制、创建和查找节点等。 3、事件 —— 如何使用事件，以及IE和标准DOM事件模型之间存在的差别。 4、XMLHttpRequest —— 这是什么、怎样完整地执行一次GET请求、怎样检测错误。 5、严格模式与混杂模式 —— 如何触发这两种模式，区分它们有何意义。 6、盒模型 —— 外边距、内边距和边框之间的关系，及IE8以下版本的浏览器中的盒模型 7、块级元素与行内元素 —— 怎么用CSS控制它们、以及如何合理的使用它们 8、浮动元素 —— 怎么使用它们、它们有什么问题以及怎么解决这些问题。 9、HTML与XHTML —— 二者有什么区别，你觉得应该使用哪一个并说出理由。 10、JSON —— 作用、用途、设计结构。 备注：</description></item><item><title>面试总结</title><link>https://chenkai.life/hide/mian-shi-zhong-jie/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://chenkai.life/hide/mian-shi-zhong-jie/</guid><description>自我介绍 https://www.zhipin.com/web/geek/resume
对公司有什么想要了解的 问答 做过最满意的项目是什么？ 上传、job任务
可以从以下几方面介绍
项目背景 为什么要做这件事情？ 最终达到什么效果？ 你处于什么样的角色，起到了什么方面的作用？ 在项目中遇到什么技术问题？具体是如何解决的？ 如果再做这个项目，你会在哪些方面进行改善？ 最近有了解哪些前沿知识 typescritp Vue3.0 WebAssembly worker_threads graphql pwa js 知识点 string array object funcion 原型 异步
js继承的各种实现以及优缺点 通过prototype指定 Object.setPrototypeOf 用 Object.create实现类继承 ES6的extends javascript 连等赋值问题 var a = {n:1}; var b = a; // 持有a，以回查 a.</description></item><item><title>面试题</title><link>https://chenkai.life/hide/mian-shi/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://chenkai.life/hide/mian-shi/</guid><description>晚上面试时发挥的十分差劲，会的题也答的马马虎虎，反思自己存在以下问题
相关方法还是掌握的不够熟练，不借助编辑器提示难以下手 遇到相关算法题脑子有些混乱，冷静下来想想还是能写出来 一些至少概念了解但并不十分清楚 缺乏面试经验，脑子有些转不过来 平常没有做相关面试题，面试题还是要刷的 还记起来的面试题大概有以下题目:
array reduse 实现map方法 做不出来的原因， 对this还是不够熟悉
不用reduse实现：
Array.prototype.map = function (fun) { let mapArr = []; for (let val of this) { mapArr.push(fun.call(null, val)); } return mapArr; } [1, 2, 3].map((val) =&amp;gt; val); 使用reduse实现：
Array.prototype.map = function (fun) { let mapArr = []; this.reduce((accumulator, currentValue, index) =&amp;gt; { mapArr.push(fun.call(null, this[index])); },null); return mapArr; } koa中间件传参数，允许输入参数限制请求 function name(methods) { return async function(ctx, next){ let startDate = new Date(); if (methods.</description></item></channel></rss>