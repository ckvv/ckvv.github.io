<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Node on CK's Blog</title><link>https://chenkai.life/tags/node/</link><description>Recent content in Node on CK's Blog</description><generator>Hugo 0.125.1</generator><language>zh-cn</language><lastBuildDate>Tue, 05 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://chenkai.life/tags/node/index.xml" rel="self" type="application/rss+xml"/><item><title>范围请求(Http Range Request)</title><link>https://chenkai.life/web/%E8%8C%83%E5%9B%B4%E8%AF%B7%E6%B1%82/</link><pubDate>Tue, 05 Mar 2024 00:00:00 +0000</pubDate><guid>https://chenkai.life/web/%E8%8C%83%E5%9B%B4%E8%AF%B7%E6%B1%82/</guid><description>Http Range Request允许服务器仅将 HTTP 消息的一部分发送回客户端。范围请求对于支持随机访问的媒体播放器、知道它们只需要大文件的一部分的数据工具以及允许用户暂停和恢复下载的下载管理器等客户端非常有用。
下面是一个实现例子:
import { createServer } from &amp;#39;node:http&amp;#39;; import { createReadStream } from &amp;#39;node:fs&amp;#39;; import { stat } from &amp;#39;node:fs/promises&amp;#39;; const server = createServer(async (req, res) =&amp;gt; { const filePath = &amp;#39;test.mp4&amp;#39;; const range = req.headers.range; const fileSize = (await stat(filePath)).size; res.statusCode = 200; res.setHeader(&amp;#39;Content-Type&amp;#39;, &amp;#39;video/mp4&amp;#39;); if (range) { const ranges = range ? range.replace(&amp;#39;bytes=&amp;#39;, &amp;#39;&amp;#39;).split(&amp;#39;-&amp;#39;) : [&amp;#39;0&amp;#39;, `${fileSize - 1}`]; const start = Number.parseInt(ranges[0]) || 0; const end = Number.</description></item></channel></rss>