<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on CK's Blog</title><link>https://blog.chenkai.life/tags/git/</link><description>Recent content in git on CK's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 23 Jul 2021 15:48:36 +0800</lastBuildDate><atom:link href="https://blog.chenkai.life/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>git</title><link>https://blog.chenkai.life/tools/git/</link><pubDate>Fri, 23 Jul 2021 15:48:36 +0800</pubDate><guid>https://blog.chenkai.life/tools/git/</guid><description>更新git yum
#安装源 yum install http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm #安装git yum install git #更新git yum update git sourceTree修改大小写 sourceTree对文件名称的大小写不敏感，当你修改文件名称的大小写进行提交时，它并不能识别,
git mv work.js Work.js sourceTree回滚到历史节点 点击要回滚的历史节点，重置到历史节点，选择硬合并； 点击当前节点，重置到当前节点，选择软合并； 提交修改内容； git reset --hard e377f60e28c8b84158 git push -f origin develop git回滚 //产看git提交的id git log //查看当前分支 git status //本地重置到当前分支 git reset --hard 7c1eb09abaf873483359883175e31e979d216db0 //推送当前分支到远程 git push -f git提交规范 feat：新功能（feature） fix：修补bug docs：文档（documentation） style： 格式（不影响代码运行的变动） refactor：重构（即不是新增功能，也不是修改bug的代码变动） test：增加测试 chore：修改构建过程或辅助工具的变动，添加依赖库、工具等 perf: 代码重构。没有新功能或修复bug，优化相关，提升性能体验 revery 回滚上一个版本 &amp;mdash;写代码&amp;mdash;</description></item><item><title>Git 子模块</title><link>https://blog.chenkai.life/tools/git_submodule/</link><pubDate>Wed, 14 Jul 2021 18:10:58 +0800</pubDate><guid>https://blog.chenkai.life/tools/git_submodule/</guid><description>转载自https://www.atlassian.com/git/tutorials/git-submodule
Git子模块(git submodule)允许您将git存储库作为另一个git存储库的子目录。 Git子模块只是对特定时间快照中另一个存储库的引用。 Git子模块使Git存储库能够合并和跟踪外部代码的版本历史记录。
如果您需要对外部依赖项进行严格的版本管理，那么使用 git 子模块是有意义的。
什么是 Git子模块 通常，代码存储库将依赖于外部代码。可以通过几种不同的方式合并此外部代码。外部代码可以直接复制粘贴到主存储库中。这种方法的缺点是会丢失对外部存储库的任何上游更改。合并外部代码的另一种方法是使用语言的包管理系统，如 Ruby Gems 或 NPM。这种方法的缺点是需要在部署源代码的所有位置进行安装和版本管理。这两种建议的合并方法都不能跟踪对外部存储库的编辑和更改。
git 子模块是宿主 git 存储库中的一条记录，它指向另一个外部存储库中的特定提交。子模块非常静态，只跟踪特定的提交。子模块不跟踪 git refs 或分支，并且不会在主机存储库更新时自动更新。将子模块添加到存储库时，将创建一个新的 .gitmodules 文件。 .gitmodules 文件包含有关子模块项目的 URL 和本地目录之间映射的元数据。如果主机存储库有多个子模块，则 .gitmodules 文件将为每个子模块提供一个条目.
Add git submodule The git submodule add is used to add a new submodule to an existing repository. The following is an example that creates an empty repo and explores git submodules.</description></item></channel></rss>