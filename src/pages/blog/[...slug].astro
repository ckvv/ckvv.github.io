---
import BlogPost from '../../layouts/BlogPost.astro';
import Cusdis from '../../components/Cusdis.astro';
import Tag from '../../components/Tag.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import { render } from 'astro:content';
import { getPosts } from '../../utils';
import { encrypt } from '../../shared';

export async function getStaticPaths() {
	const posts = await getPosts();
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post,
	}));
}
const post = Astro.props;

if(post.data.encrypt && post.rendered?.html) {
	post.rendered.html =  await encrypt(`${post.rendered?.html}`);
}

const { Content } = await render(post);
---

<BlogPost {...post.data}>
	<h1 class="text-4xl font-bold my-4">{ post.data.title }</h1>
	<div class="my-2 flex justify-between">
		<div class="flex gap-4">
			{
				Array.isArray(post.data.tags) && post.data.tags.map((tag) => (
					<Tag href={`/tag/${tag}/`}>{tag}</Tag>
				))
			}
		</div>
		<FormattedDate date={post.data.updatedDate || post.data.pubDate}/>
	</div>
	<div class="content">
		{
			post.data.encrypt ? <button id="button" data-data={post.rendered?.html}>解密</button> : <Content />
		}
	</div>
	<Cusdis pageID={post?.filePath} pageURL={post?.filePath} pageTitle={post?.data.title} />
</BlogPost>


<script>
import { decrypt } from '../../shared';

async function decryptData(data: string, tip?: string) {
  try {
    // eslint-disable-next-line no-alert
    const password = prompt(tip || '请输入密码');
    if (!password) {
      return;
    }
    const result = await decrypt(data, password);
		return result;
  } catch (error) {
		return decryptData(data, '密码错误, 请重新输入密码');
  }
}
document.getElementById("button")?.addEventListener("click", async function () {
	const result = await decryptData(`${this.dataset.data}`);
	if(result) {
		this.outerHTML = result;
	}
});
</script>
